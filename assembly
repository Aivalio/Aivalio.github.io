Για να υπολογίσουμε το άθροισμα των αριθμών M[0] έως M[19] στον καταχωρητή x10 σε συμβολική γλώσσα RISC-V, θα χρησιμοποιήσουμε τις εντολές φόρτωσης (load) και πρόσθεσης (add). Επειδή οι τιμές αποθηκεύονται σε διαδοχικά byte και η τιμή κάθε στοιχείου του πίνακα M κυμαίνεται μεταξύ 0 και 12, θα φορτώσουμε τον κάθε αριθμό από τον πίνακα και θα τον προσθέσουμε στον καταχωρητή x10.

Για να το επιτύχουμε αυτό χωρίς διακλαδώσεις και άλματα, θα χρειαστούμε μια ακολουθία εντολών που θα φορτώνει κάθε στοιχείο του πίνακα και θα το προσθέτει στο άθροισμα.

Η λύση με τις λιγότερες δυνατές εντολές είναι η εξής:

    li      x10, 0           # Αρχικοποίηση του καταχωρητή x10 στο 0 (άθροισμα)
    li      x11, 0           # Αρχικοποίηση του καταχωρητή x11 στο 0 (δείκτης του πίνακα)

loop:
    lb      x12, 0(x9)       # Φορτώνουμε το στοιχείο M[x11] στον καταχωρητή x12
    add     x10, x10, x12    # Προσθέτουμε το στοιχείο στο άθροισμα
    addi    x9, x9, 1        # Μετακινούμε τη διεύθυνση μνήμης του πίνακα κατά 1 byte (στο επόμενο στοιχείο)
    addi    x11, x11, 1      # Αυξάνουμε το δείκτη του πίνακα
    blt     x11, 20, loop    # Αν ο δείκτης είναι μικρότερος από 20, επαναλαμβάνουμε το loop

Επεξήγηση:

    li x10, 0: Αρχικοποιούμε τον καταχωρητή x10 στο 0, για να ξεκινήσουμε το άθροισμα.

    li x11, 0: Αρχικοποιούμε τον καταχωρητή x11 για να χρησιμοποιηθεί ως δείκτης στον πίνακα.

    lb x12, 0(x9): Φορτώνουμε το byte από τη διεύθυνση x9 (όπου βρίσκεται ο πίνακας) στο x12.

    add x10, x10, x12: Προσθέτουμε το περιεχόμενο του x12 στο x10.

    addi x9, x9, 1: Αυξάνουμε τη διεύθυνση μνήμης του πίνακα κατά 1 byte, έτσι ώστε να πάμε στο επόμενο στοιχείο του πίνακα.

    addi x11, x11, 1: Αυξάνουμε τον δείκτη του πίνακα κατά 1.

    blt x11, 20, loop: Αν ο δείκτης x11 είναι μικρότερος από 20, επαναλαμβάνουμε την εκτέλεση του loop.

Αυτή η λύση απαιτεί 22 εντολές συνολικά (χωρίς να υπολογίζουμε τις εντολές για τη φόρτωση της διεύθυνσης του πίνακα ή τις εντολές τερματισμού).
